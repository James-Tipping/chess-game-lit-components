{"version":3,"file":"match.js","sourceRoot":"","sources":["../src/elements/match.ts"],"names":[],"mappings":"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","sourcesContent":["import { css, html, LitElement } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators.js\";\nimport { router } from \"../main\";\nimport { styleMap } from \"lit/directives/style-map.js\";\nimport { WhiteKingSvg, BlackKingSvg, BackButtonSvg } from \"./svgs\";\nimport { DataStore, MatchType } from \"./DataStore\";\n\n@customElement('match-view')\nexport class MatchView extends LitElement {\n\n  @state()\n  private matchData: MatchType | undefined;\n\n  @state()\n  private dataStoreInstance: DataStore;\n\n  @property({ type: Object })\n  location = router.location;\n\n  constructor() {\n    super();\n    this.dataStoreInstance = DataStore.getInstance();\n    this.dataStoreInstance.getData();\n  }\n\n  async connectedCallback() {\n    super.connectedCallback();\n    this.location = router.location;\n    console.log(this.location.getUrl());\n    this.matchData = await this.dataStoreInstance.getMatchFromId(this.location.params.id.toString());\n  }\n\n  handleBackButtonClick() {\n    router.render(router.urlForPath('/'));\n  }\n\n  render() {\n    console.log(this.location);\n    const whiteStyles = { color: this.matchData?.white.result === 'win' ? 'blue' : 'red'}\n    const blackStyles = { color: this.matchData?.black.result === 'win' ? 'blue' : 'red'}\n    return html`\n      <div class=\"header\">\n        <button @click=${this.handleBackButtonClick}>${BackButtonSvg}</button>\n        <h3 class=\"title\">Match Details</h3>\n      </div>\n          <div class=\"grid-container\">\n            <div class=\"chess-piece-svg\">${WhiteKingSvg}</div>\n            <div class=\"user-data\" style=${styleMap(whiteStyles)}>\n              <p><b>${this.matchData?.white.username}</b></p>\n              <p>${this.matchData?.white.result.toUpperCase()}</p>\n              <p>Rating: ${this.matchData?.white.rating}</p>\n            </div>\n            <div class=\"user-data\" style=${styleMap(blackStyles)}>\n              <p><b>${this.matchData?.black.username}</b></p>\n              <p>${this.matchData?.black.result.toUpperCase()}</p>\n              <p>Rating: ${this.matchData?.black.rating}</p>\n            </div>\n            <div class=\"chess-piece-svg\">${BlackKingSvg}</div>\n          </div>\n        </div>\n      </div>\n      `;\n\n  }\n\n  static styles = css`\n    .header {\n      margin-bottom: 2rem;\n    }\n    .header * {\n      display: inline;\n    }\n    .title {\n      font-size: 3rem;\n    }\n    .grid-container {\n      display: grid;\n      grid-template-columns: repeat(4, 1fr);\n      grid-gap: 1rem;\n      border: 0.2rem solid rgb(183, 68, 184);\n      background-color: white;\n      border-radius: 1rem;\n    }\n    .chess-piece-svg {\n      margin: auto;\n    }\n    svg {\n      height: 5rem;\n      width: auto;\n    }\n    button {\n      background-color: transparent;\n      outline: none;\n      border: none;\n      text-align: start;\n    }\n    button svg {\n      height: 2rem;\n      width: auto;\n    }\n    button svg:hover {\n      fill: gray;\n    }\n  `;\n\n}"]}