{"version":3,"file":"leaderboard.js","sourceRoot":"","sources":["../src/elements/leaderboard.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, css } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators.js\";\nimport { BackButtonSvg, WhiteKingSvg, BlackKingSvg } from \"./svgs\";\nimport {styleMap} from 'lit/directives/style-map.js';\n// import { router } from \"../main\";\n\nexport interface PlayerType {\n  username: string;\n  points: number;\n  is_winner: boolean;\n}\n\nexport interface MatchType {\n  white: {\n    username: string;\n    rating: number;\n    result: string;\n  };\n  black: {\n    username: string;\n    rating: number;\n    result: string;\n  };\n}\n\nexport interface DataType {\n  games: [\n    {\n      white: {\n        username: string;\n        rating: number;\n        result: string;\n      };\n      black: {\n        username: string;\n        rating: number;\n        result: string;\n      };\n    }\n  ];\n  players: [\n    {\n      username: string;\n      points: number;\n      is_winner: boolean;\n    }\n  ];\n}\n\n@customElement(\"leader-dashboard\")\nexport class Leaderboard extends LitElement {\n  // @property({ type: Object })\n  // location = router.location;\n\n  @property({ type: Object })\n  data!: DataType;\n\n  @property({ type: Array })\n  players: PlayerType[]; //= [];\n\n  @state()\n  private matchData: MatchType | undefined;\n\n  @property()\n  name: string;\n\n  static styles = css`\n    .leaderboard {\n      width: 50%;\n      margin: auto;\n    }\n    .title {\n      font-size: 3rem;\n    }\n    button {\n      background-color: transparent;\n      outline: none;\n      border: none;\n      text-align: start;\n    }\n    button svg {\n      height: 2rem;\n      width: auto;\n    }\n    button svg:hover {\n      fill: gray;\n    }\n    .header {\n      margin-bottom: 2rem;\n    }\n    .header * {\n      display: inline;\n    }\n    input {\n      font-family: \"Poppins\", sans-serif;\n      width: 80%;\n      border-radius: 0.5rem;\n      color: var(--pink-custom);\n    }\n    input:focus {\n      border-color: var(--pink-custom);\n      border-style: solid;\n      outline: none;\n    }\n    .scrollable-leaderboard-div {\n      margin-top: 3rem;\n      overflow-y: auto;\n      max-height: 70vh;\n      /* display: none; */\n      -ms-overflow-style: none;\n      scrollbar-width: none;\n    }\n    .scrollable-leaderboard-div::-webkit-scrollbar {\n      display: none;\n    }\n    .grid-container {\n      display: grid;\n      grid-template-columns: repeat(4, 1fr);\n      grid-gap: 1rem;\n      border: 0.2rem solid rgb(183, 68, 184);\n      background-color: white;\n      border-radius: 1rem;\n    }\n    .chess-piece-svg {\n      margin: auto;\n    }\n    svg {\n      height: 5rem;\n      width: auto;\n    }\n    .win {\n      color: red\n    }\n    .lose {\n      color: blue;\n    }\n  `;\n\n\n  constructor() {\n    super();\n    this.players = [] as PlayerType[];\n    this.fetchData();\n    this.matchData = undefined;\n    this.name = \"\";\n  }\n\n  async fetchData() {\n    const response = await fetch(\n      \"https://api.chess.com/pub/tournament/late-titled-tuesday-blitz-january-31-2023-3732262/11/1\"\n    );\n    console.log(`response = ${response}`);\n    if (!response.ok) {\n      throw new Error(\"Network error from API\");\n    }\n    this.data = await response.json();\n    this.sortData();\n  }\n\n  sortData() {\n    this.data.players.sort((a, b) => {\n      if (a.is_winner === true && b.is_winner === false) return -1;\n      if (b.is_winner === true && a.is_winner === false) return 1;\n      if (a.points > b.points) return -1;\n      if (a.points < b.points) return 1;\n      else return 0;\n    });\n    this.players = this.data.players;\n  }\n\n  handleMatchRequest(e: CustomEvent) {\n    // console.log(\"Second handleclick fctn\");\n    // console.log(e);\n    const name = e.detail.name as string;\n    this.matchData = this.data.games.filter(\n      (game) => name.toLowerCase() === game.white.username.toLowerCase() || name.toLowerCase() === game.black.username.toLowerCase()\n    )[0];\n    // console.log(this.data.games.filter(\n    //   (game) => e.detail.name === game.white.username || game.black.username\n    // ).length)\n    // console.log(e.detail.name);\n    // console.log(this.matchData);\n  }\n\n  handleBackButtonClick() {\n    console.log(\"back button clicked\");\n    this.matchData = undefined;\n    // this.requestUpdate();\n  }\n\n  handleInputChange(e: InputEvent) {\n    this.name = (e.target as HTMLInputElement).value;\n    this.players = this.data.players.filter((player) =>\n      player.username.includes(this.name)\n    );\n  }\n\n  getTournamentHtml() {\n    return html`\n      <div class=\"leaderboard\" @match-requested=${this.handleMatchRequest}>\n        <h3 class=\"title\">Leaderboard</h3>\n        <input\n          .value=${this.name}\n          @input=${this.handleInputChange}\n          placeholder=\"Search for a username\"\n        />\n        <div class=\"scrollable-leaderboard-div\">\n          ${this.players.map((player) => {\n            return html`\n              <person-details\n                class=\"player-container\"\n                .playerData=${player}\n              ></person-details>\n            `;\n          })}\n        </div>\n      </div>\n    `;\n  }\n\n  getGameHtml() {\n    const whiteStyles = { color: this.matchData?.white.result === 'win' ? 'blue' : 'red'}\n    const blackStyles = { color: this.matchData?.black.result === 'win' ? 'blue' : 'red'}\n    return html`\n      <div class=\"header\">\n        <button @click=${this.handleBackButtonClick}>${BackButtonSvg}</button>\n        <h3 class=\"title\">Match Details</h3>\n      </div>\n          <div class=\"grid-container\">\n            <div class=\"chess-piece-svg\">${WhiteKingSvg}</div>\n            <div class=\"user-data\" style=${styleMap(whiteStyles)}>\n              <p><b>${this.matchData?.white.username}</b></p>\n              <p>${this.matchData?.white.result.toUpperCase()}</p>\n              <p>Rating: ${this.matchData?.white.rating}</p>\n            </div>\n            <div class=\"user-data\" style=${styleMap(blackStyles)}>\n              <p><b>${this.matchData?.black.username}</b></p>\n              <p>${this.matchData?.black.result.toUpperCase()}</p>\n              <p>Rating: ${this.matchData?.black.rating}</p>\n            </div>\n            <div class=\"chess-piece-svg\">${BlackKingSvg}</div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  render() {\n    return this.matchData ? this.getGameHtml() : this.getTournamentHtml();\n  }\n}\n"]}