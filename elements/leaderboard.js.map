{"version":3,"file":"leaderboard.js","sourceRoot":"","sources":["../src/elements/leaderboard.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,KAAK,CAAC;AACrD,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AACnE,OAAO,EAAE,SAAS,EAAmC,MAAM,aAAa,CAAC;AACzE,OAAO,EAAE,MAAM,EAAE,MAAM,SAAS,CAAC;AACjC,OAAO,EAAC,MAAM,EAAC,MAAM,gBAAgB,CAAC;AAGtC,IAAa,WAAW,GAAxB,MAAa,WAAY,SAAQ,UAAU;IAoBzC;QACE,KAAK,EAAE,CAAC;QANV,iBAAY,GAAG;YACb,gBAAgB,EAAE,KAAK;YACvB,OAAO,EAAE,EAAE;SACZ,CAAC;QAIA,IAAI,CAAC,iBAAiB,GAAG,SAAS,CAAC,WAAW,EAAE,CAAC;QACjD,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;IACjB,CAAC;IAED,KAAK,CAAC,iBAAiB;QACrB,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,MAAM,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,CAAC;IAClE,CAAC;IAED,KAAK,CAAC,kBAAkB,CAAC,CAAc;QACrC,MAAM,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC,IAAc,CAAC;QACrC,IAAI;YACF,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;YAC1E,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,OAAO,EAAE,CAAC,CAAC,CAAC;SAClD;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;YAC7B,IAAI,CAAC,kBAAkB,CAAC,KAAc,CAAC,CAAC;SACzC;IACH,CAAC;IAED,kBAAkB,CAAC,KAAY;QAC7B,IAAI,CAAC,YAAY,GAAG;YAClB,gBAAgB,EAAE,IAAI;YACtB,OAAO,EAAE,KAAK,CAAC,OAAO;SACvB,CAAA;QACD,MAAM,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;IAC1D,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,YAAY,GAAG;YAClB,gBAAgB,EAAE,KAAK;YACvB,OAAO,EAAE,EAAE;SACZ,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,iBAAiB,CAAC,CAAa;QACnC,IAAI,CAAC,IAAI,GAAI,CAAC,CAAC,MAA2B,CAAC,KAAK,CAAC;QACjD,IAAI,CAAC,OAAO,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3E,CAAC;IAED,MAAM;;QACJ,OAAO,IAAI,CAAA;kDACmC,IAAI,CAAC,kBAAkB;;;mBAGtD,IAAI,CAAC,IAAI;mBACT,IAAI,CAAC,iBAAiB;;;UAG/B,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAA,wBAAwB,IAAI,CAAC,YAAY,CAAC,OAAO,gBAAgB,CAAC,CAAC,CAAC,OAAO;;YAElH,MAAA,IAAI,CAAC,OAAO,0CAAE,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE;YAC7B,OAAO,IAAI,CAAA;;;8BAGO,MAAM;;aAEvB,CAAC;QACJ,CAAC,CAAC;;;KAGP,CAAC;IACJ,CAAC;CAsCF,CAAA;AApCQ,kBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkClB,CAAC;AAtHF;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;yCACX;AAGhB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;4CACJ;AAGtB;IADC,KAAK,EAAE;sDAC6B;AAGrC;IADC,QAAQ,EAAE;yCACE;AAGb;IADC,KAAK,EAAE;iDAIN;AAlBS,WAAW;IADvB,aAAa,CAAC,kBAAkB,CAAC;GACrB,WAAW,CA2HvB;SA3HY,WAAW","sourcesContent":["import { LitElement, html, css, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators.js\";\nimport { DataStore, MatchType, PlayerType, DataType } from \"./DataStore\";\nimport { router } from \"../main\";\nimport {Router} from '@vaadin/router';\n\n@customElement(\"leader-dashboard\")\nexport class Leaderboard extends LitElement {\n\n  @property({ type: Object })\n  data!: DataType;\n\n  @property({ type: Array })\n  players!: PlayerType[]\n\n  @state()\n  private dataStoreInstance: DataStore;\n\n  @property()\n  name: string;\n\n  @state()\n  errorMessage = {\n    showErrorMessage: false,\n    message: ''\n  };\n\n  constructor() {\n    super();\n    this.dataStoreInstance = DataStore.getInstance();\n    this.name = \"\";\n  }\n\n  async connectedCallback() {\n    super.connectedCallback();\n    await this.dataStoreInstance.getData();\n    this.players = await this.dataStoreInstance.getPlayersDetails();\n  }\n\n  async handleMatchRequest(e: CustomEvent) {\n    const name = e.detail.name as string;\n    try {\n      const matchId = await this.dataStoreInstance.getMatchIdFromUsername(name);\n      Router.go(router.urlForPath(`/match${matchId}`));\n    } catch (error) {\n      console.log('error handled');\n      this.handleNoMatchError(error as Error);\n    }\n  }\n\n  handleNoMatchError(error: Error) {\n    this.errorMessage = {\n      showErrorMessage: true,\n      message: error.message\n    }\n    const timeout = setTimeout(this.removeMatchError, 3000);\n  }\n\n  removeMatchError() {\n    this.errorMessage = {\n      showErrorMessage: false,\n      message: ''\n    };\n  }\n\n  async handleInputChange(e: InputEvent) {\n    this.name = (e.target as HTMLInputElement).value;\n    this.players = await this.dataStoreInstance.getPlayersDetails(this.name);\n  }\n\n  render() {\n    return html`\n      <div class=\"leaderboard\" @match-requested=${this.handleMatchRequest}>\n        <h3 class=\"title\">Leaderboard</h3>\n        <input\n          .value=${this.name}\n          @input=${this.handleInputChange}\n          placeholder=\"Search for a username\"\n        />\n        ${this.errorMessage.showErrorMessage ? html`<error-view .message=${this.errorMessage.message}></error-view>` : nothing}\n        <div class=\"scrollable-leaderboard-div\">\n          ${this.players?.map((player) => {\n            return html`\n              <person-details\n                class=\"player-container\"\n                .playerData=${player}\n              ></person-details>\n            `;\n          })}\n        </div>\n      </div>\n    `;\n  }\n\n  static styles = css`\n    .leaderboard {\n      width: 50%;\n      margin: auto;\n    }\n    .title {\n      font-size: 3rem;\n    }\n    input {\n      font-family: \"Poppins\", sans-serif;\n      width: 80%;\n      border-radius: 0.5rem;\n      color: var(--pink-custom);\n    }\n    input:focus {\n      border-color: var(--pink-custom);\n      border-style: solid;\n      outline: none;\n    }\n    .scrollable-leaderboard-div {\n      margin-top: 3rem;\n      overflow-y: auto;\n      max-height: 70vh;\n      /* display: none; */\n      -ms-overflow-style: none;\n      scrollbar-width: none;\n    }\n    .scrollable-leaderboard-div::-webkit-scrollbar {\n      display: none;\n    }\n    svg {\n      height: 5rem;\n      width: auto;\n    }\n  `;\n\n}\n"]}