{"version":3,"file":"leaderboard.js","sourceRoot":"","sources":["../src/elements/leaderboard.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAO,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAM3D,CAAC;AAGF,IAAa,WAAW,GAAxB,MAAa,WAAY,SAAQ,UAAU;IAezC;QACE,KAAK,EAAE,CAAC;QAHV,YAAO,GAAsB,EAAE,CAAC;QAI9B,IAAI,CAAC,OAAO,GAAG,EAAuB,CAAC;QACvC,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,KAAK,CAAC,SAAS;QACb,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,6FAA6F,CAAC,CAAC;QAC5H,OAAO,CAAC,GAAG,CAAC,cAAc,QAAQ,EAAE,CAAC,CAAC;QACtC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE;YAChB,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;SAC3C;QACD,sCAAsC;QACtC,IAAI,CAAC,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;QAClC,OAAO,CAAC,GAAG,CAAC,eAAe,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;QACxC,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;QACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,IAAI,CAAC,OAAO,EAAE,CAAC,CAAA;IAC/C,CAAC;IAED,KAAK,CAAC,QAAQ;QACZ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YACzB,IAAI,CAAC,CAAC,SAAS,KAAK,IAAI,IAAI,CAAC,CAAC,SAAS,KAAK,IAAI;gBAAE,OAAO,CAAC,CAAA;YAC1D,IAAI,CAAC,CAAC,SAAS,KAAK,IAAI,IAAI,CAAC,CAAC,SAAS,KAAK,KAAK;gBAAE,OAAO,CAAC,CAAC,CAAA;YAC5D,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM;gBAAE,OAAO,CAAC,CAAA;YACjC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM;gBAAE,OAAO,CAAC,CAAC,CAAA;;gBAC7B,OAAO,CAAC,CAAA;QACf,CAAC,CAAC,CAAA;IACJ,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;;;UAGL,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;YAC1B,OAAO,IAAI,CAAA;sCACiB,MAAM;WACjC,CAAA;QACH,CAAC,CAAC;;KAEL,CAAA;IACH,CAAC;CACF,CAAA;AAtDC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;yCAQzB;AAGF;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;4CACM;AAbrB,WAAW;IADvB,aAAa,CAAC,kBAAkB,CAAC;GACrB,WAAW,CAyDvB;SAzDY,WAAW","sourcesContent":["import { LitElement, html, css } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\nexport interface playerType {\n  'username': string,\n  'points': number,\n  'is_winner': boolean\n};\n\n@customElement('leader-dashboard')\nexport class Leaderboard extends LitElement {\n\n  @property({ type: Object })\n  data!: {\n    'games': [],\n    'players': [{\n      'username': string,\n      'points': number,\n      'is_winner': boolean\n    }]\n  };\n\n  @property({ type: Array })\n  players: Array<playerType> = [];\n\n  constructor() {\n    super();\n    this.players = [] as Array<playerType>;\n    this.fetchData();\n  }\n\n  async fetchData() {\n    const response = await fetch('https://api.chess.com/pub/tournament/late-titled-tuesday-blitz-january-31-2023-3732262/11/1');\n    console.log(`response = ${response}`);\n    if (!response.ok) {\n      throw new Error('Network error from API');\n    }\n    // const data = await response.json();\n    this.data = await response.json();\n    console.log(`this.data = ${this.data}`);\n    await this.sortData();\n    console.log(`this.players = ${this.players}`)\n  }\n\n  async sortData() {\n    this.players = this.data.players;\n    this.players.sort((a, b) => {\n      if (a.is_winner === true && b.is_winner === true) return 1\n      if (b.is_winner === true && a.is_winner === false) return -1\n      if (a.points > b.points) return 1\n      if (a.points < b.points) return -1\n      else return 0\n    })\n  }\n\n  render() {\n    return html`\n      <div>\n        <h3 class=\"title\">Leaderboard</h3>\n        ${this.players.map(player => {\n          return html`\n            <person-details .player=${player}></person-details>\n          `\n        })}\n      </div>\n    `\n  }\n}"]}