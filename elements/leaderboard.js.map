{"version":3,"file":"leaderboard.js","sourceRoot":"","sources":["../src/elements/leaderboard.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, css, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators.js\";\nimport { DataStore, MatchType, PlayerType, DataType } from \"./DataStore\";\nimport { router } from \"../main\";\nimport { Router } from \"@vaadin/router\";\nimport type { MultiSelectComboBoxSelectedItemsChangedEvent } from \"@vaadin/multi-select-combo-box\";\n\ndebugger\n\n@customElement(\"leader-dashboard\")\nexport class Leaderboard extends LitElement {\n  @property()\n  private playerScores!: number[];\n\n  @property()\n  private selectedPlayerScores: number[] = [];\n\n  @property({ type: Array })\n  private players!: PlayerType[];\n\n  @state()\n  private dataStoreInstance: DataStore;\n\n  @state()\n  private modalStatus: {\n    isModalOpen: boolean;\n    usernameNoMatchData: string;\n  };\n\n  @property()\n  private name: string;\n\n  constructor() {\n    super();\n    this.dataStoreInstance = DataStore.getInstance();\n    this.name = \"\";\n    this.modalStatus = {\n      isModalOpen: false,\n      usernameNoMatchData: \"\",\n    };\n  }\n\n  async connectedCallback() {\n    super.connectedCallback();\n    await this.dataStoreInstance.getData();\n    this.players = await this.dataStoreInstance.getPlayersDetails([]);\n    this.playerScores = await this.getPlayerScores();\n  }\n\n  async handleMatchRequest(e: CustomEvent) {\n    const name = e.detail.name as string;\n    const matchId = await this.dataStoreInstance.getMatchIdFromUsername(name);\n    if (matchId !== \"None\") {\n      Router.go(router.urlForPath(`/match${matchId}`));\n    } else {\n      this.modalStatus = {\n        isModalOpen: true,\n        usernameNoMatchData: name,\n      };\n    }\n  }\n  //\n  closeModal() {\n    console.log(\"Leadberoard.ts close modal\");\n    this.modalStatus = {\n      isModalOpen: false,\n      usernameNoMatchData: \"\",\n    };\n  }\n\n  async handleInputChange(e: InputEvent | MultiSelectComboBoxSelectedItemsChangedEvent<number>) {\n    if (e instanceof InputEvent) {\n      this.name = (e.target as HTMLInputElement).value;\n      this.players = await this.dataStoreInstance.getPlayersDetails(this.selectedPlayerScores, this.name);\n    } else {\n      this.selectedPlayerScores = e.detail.value;\n      this.players = await this.dataStoreInstance.getPlayersDetails(this.selectedPlayerScores, this.name)\n    }\n  }\n\n  async getPlayerScores() {\n    const playerScores = [...(await this.dataStoreInstance.getPlayerScores())];\n    return playerScores;\n  }\n\n  render() {\n    console.log('leader render');\n    return html`\n      ${this.modalStatus.isModalOpen\n        ? html` <no-data-modal\n            .username=${this.modalStatus.usernameNoMatchData}\n            @close-modal=${this.closeModal}\n          ></no-data-modal>`\n        : nothing}\n      <div class=\"leaderboard\" @match-requested=${this.handleMatchRequest}>\n        <h3 class=\"title\">Leaderboard</h3>\n        <vaadin-text-field\n          .value=${this.name}\n          @input=${this.handleInputChange}\n          placeholder=\"Search Username\"\n          clear-button-visible\n        >\n          <vaadin-icon\n            icon=\"vaadin:search\"\n            aria-label=\"search\"\n            slot=\"prefix\"\n            stroke=\"white\"\n          ></vaadin-icon>\n        </vaadin-text-field>\n        <vaadin-multi-select-combo-box\n          .items=${this.playerScores}\n          clear-button-visible\n          .selectedItems=${this.selectedPlayerScores}\n          @selected-items-changed=${this.handleInputChange}\n          placeholder=\"Choose Score\"\n        >\n        </vaadin-multi-select-combo-box>\n        <div class=\"scrollable-leaderboard-div\">\n          ${this.players?.map((player) => {\n            return html`\n              <person-details\n                class=\"player-container\"\n                .playerData=${player}\n              ></person-details>\n            `;\n          })}\n        </div>\n      </div>\n    `;\n  }\n\n  static styles = css`\n    .leaderboard {\n      width: 50%;\n      margin: auto;\n      max-height: 100vh;\n    }\n    .title {\n      font-size: 3rem;\n    }\n    vaadin-text-field {\n      width: 100%;\n      margin: auto;\n    }\n    vaadin-multi-select-combo-box {\n      width: 100%;\n      margin: auto;\n    }\n    input {\n      font-family: \"Poppins\", sans-serif;\n    }\n    .scrollable-leaderboard-div {\n      margin-top: 3rem;\n      overflow-y: scroll;\n      max-height: 70vh;\n      -ms-overflow-style: none;\n      scrollbar-width: none;\n    }\n    .scrollable-leaderboard-div::-webkit-scrollbar {\n      display: none;\n    }\n    svg {\n      height: 5rem;\n      width: auto;\n    }\n    \n  `;\n}\n"]}